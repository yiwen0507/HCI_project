review_id,course_name,prof_name,year_taken,review_box,scoring_star,workload_star,recommend_star,user
1,機率,謝秉均,111上,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
開學第一堂要大家回家拍影片剪影片自我介紹放給全班看，然後全班要投票跟打分數選出做得好的自我介紹影片。
每節課前半段會講一些理論，後半段會給一個主題然後發道具給全班（蠟筆、彩色筆、積木、紙），要各組討論之後發揮創意報告給全班，還有摺紙飛機比賽，期末還要拍小短劇。

◆上課方式◆
（投影片、團體討論、老師教學風格）
投影片、分組

▼考試作業▼
每週一份課程心得，偶爾有課間分組小報告，期中期末大報告

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
重出席

＆誰適合修這門課＆
小朋友

￠最後想說的話￠
這堂課好不好見仁見智，但如果課業壓力很重事情很多就會覺得學不到東西又花很多時間，如果組員很雷或消失也只能自己想辦法。
雖然每堂課都在畫畫堆積木，但也沒感受到在創新創意的部分有什麼收穫，反而覺得上課3小時過的很漫長",4.8,4.8,4.8,undefined
2,機率 (英文授課),蔡文祥,102上,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
用A First Course in Probability
教一到八章 不過第八章不會教完 他好像說他沒上完過
用他自己的講義 所以可以不用買書


◆上課方式◆
（投影片、團體討論、老師教學風格）
投影片 大致上跟講義一樣有些部分可能會修改
很喜歡點人複誦他覺得重要的部分 會舉生活例子 所以坐前面的大概一整
學期都會被拿來舉例
也會教大家一起念課文或重要觀念


▼考試作業▼

沒有小考 兩次期中一次期末 每次23%
作業好像七八次 每次要先通過他網站的五題才能拿到作業 共31%
交作業跟考卷時會直接給詳解
然後每次考試可以帶一張A4筆記跟當次作業解答
每次考試大概會有10%是從每次的那五題出的


￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
每次上課會抽點人 被點到沒來的人會爽幾個禮拜 就是問題都問你之類的
不喜歡人遲到上課睡覺吃東西寫其它作業 看到穿拖鞋的會念個幾句
沒來的人 助教會主動連絡你
不過學期末可能因為課都上不完的關係就很少點了
其實只要會一點積分就可以修了


￠最後想說的話￠

其實教授人還不錯
只是上課要求比較多 很喜歡點人回答覆誦 可能有些人不喜歡
學期末loading會重一點
分數還可
然後不要想交完作業拿完詳解就翹 通常會被他抓到
教授特別喜歡外籍生


＆誰適合修這門課＆

資工大二上",4.5,5,4,undefined
3,計算機概論與程式設計,黃俊龍,111上,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
遞迴、指標、建表、字串處理、大數運算

▼考試作業▼
上機很難但助教人很好，像我是外系去選，真的很徬徨無助的時候問助教，助教會很有耐心的教，太感謝了，我期中寫1/6期末3/7個AC，最後B+
上機偶爾會要demo

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

￠最後想說的話￠
一個外系的直接修到資工最硬的老師，上機差點被難到哭
謝謝助教跟俊龍讓我過了，是真的學到很多，不過久沒打又有點忘了哭阿",3,5,3.5,undefined
4,人工智慧理論與實作,黃思皓,111-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
基礎Python、基礎的股票和選擇權概念、選擇權定價、決策樹、基因演算法、入門電腦視覺、Adaboost、機器學習觀念

◆上課方式◆
（投影片、團體討論、老師教學風格）
全程實體

▼考試作業▼
程式作業50%、期中報告+期末考40%、課堂參與10%

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
因為開給財金所的，所以不預設大家會寫程式，不過當然本來就會的話會比較跟得上
簡單來說算是一門偏水的資訊課吧。
課程安排如下：首先有錄幾個影片讓大家熟悉Python的基本語法，當然如果你原本就會的話就可以放推那些影片。開學前兩週會講一些財金的知識，像是衍生性商品簡介、選擇權定價之類的，不過如果是本系生在二下的投資學就已經學過了，所以也蠻輕鬆。再來講的是Decision Tree, 基因演算法，還有非常基礎的電腦視覺，內容就如同上面列舉。
上課模式和大一的程式設計蠻像，基本上老師會帶著一行一行寫code，並會快速解釋一下在做什麼，也會搭配PPT和白板講解。不過有些套件等的帶得會有點快，如果不熟悉Numpy會有點跟不上，不過回去慢慢理解就行。然後這學期共有5個作業，作業基本上不會太難，因為上課大概會完成80%左右，只要上課聽得懂回去應該蠻快可以完成。
對了，這堂課在電腦教室上課，所以不帶自己的電腦也行，但是帶自己的電腦的話就可以用教室的電腦同步投影幕的code，會比較方便。
期中沒有考試而是報告，4人一組，每組會拿到一篇ML相關的Paper，四人一起錄製一個20分鐘左右的影片報這篇Paper，並且要看完所有組別的影片並強制提問，最後助教會把問題整理起來寄給各組並要求繳一份文件回答。啊這也是我大學以來第一次看Paper，所以看得有點吃力，不過因為是4個人看一篇所以也不算太困難。然後回覆問題時剛好那時候ChatGPT問世，所以幫了不少忙，我也有碰到看起來就是隨便問的人，所以我也跟著隨便答(X)
期末考則是10題簡答題，主要就是問整學期講過的一些觀念，然後也不會問太細，大家應該都考得不錯。（例如說：試解釋基因演算法的四個步驟，這種的）
總之來說，如果有Python基礎的話這門課難度不高，Loading也沒到很重。但是有一些比較難的概念上課時跟著打code就過去了，所以也不一定有搞懂。

＆誰適合修這門課＆
想多練Python語法的人

￠最後想說的話￠",3.5,4,3,undefined
5,微積分(一）,楊春美,111-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
微分、積分

◆上課方式◆
（投影片、團體討論、老師教學風格）
以投影片為主，偶爾寫板書。
投影片內容就是課本的重點截錄。
老師教得很慢很仔細也滿清楚的，注重觀念的理解，常常會晚下課。

▼考試作業▼
每個小節結束會有幾題課本的習題當作作業。
平常不太會有小考，好像只有過一次，如果有也會提前說。
一次期中考，一次期末考。(但都辦在星期六..)

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
偶爾會突然點名，沒被點到的會被扣分
需要的基礎就是高中微積分。

￠最後想說的話￠
我覺得老師教學算認真，而且很仔細，但個人覺得期中期末考的題目都滿難的，可能跟大會考差不多，
不過滿多題目會和考古題相似，可以透過考古練習。
而且期末老師會調分 不錯甜~
整體來說我覺得不錯!",4,4,4,undefined
6,離散數學,張立平,99-2,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

離離散散的數學orz

邏輯、數列、級數、歸納法、遞回、組合...

可能因為是資工系開的課，後面會教關系(relations)、圖論

教授還會講一點第十章的樹，這好像其他班沒教

因為這門課是基礎課，東西都不會教太深入

另外我覺得教授比較偏重在圖論的部分

像 RSA 加密教授就全部跳過，考試也沒考



◆上課方式◆
（投影片、團體討論、老師教學風格）

用教授自製的講義上課(投影片)

有時候教授會覺得自己講太無聊，就會拿名單來點人回答@@

回答對或不對不重要，這只算是順便點名

常常點到一堆翹課的XD



▼考試作業▼


1 次期中 1 次期末，佔很重(但沒說幾%

沒有作業，但老師會放出練習題

期中期末很多都會從練習題出

常常有小考，這學期有 8 次

像這學期課在 5CD 2G，那小考都會在 5CD 中間下課考

而且 2G 會講有小考，和範圍

小考考的都不難，都上課講過的，但都只有一兩題，答錯就沒有了 0口0

不過有寫名字就 6 分(滿分10分)

算是變相點名XD



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

基本上不點名

但會有變相點名，像小考、上課點人回答之類的(如前述)



￠最後想說的話￠


我覺得分數還蠻甜的~

小考幾乎都從講義出；期中期末幾乎都從小考、練習題出



＆誰適合修這門課＆

需要修離散數學的人 (廢話...",4,5,4,undefined
7,離散數學,易志偉,,"評分方式：
四次期中考(SHOCK!!!!!)
然後可以自己決定出席率要不要算在總成績內(如果要，佔10%，點十次)
然後就沒有了......

至於分數好不好掌握嘛，老師都預告100%從課本第3K+1題出，可是幾百題的題目誰寫的完(有，有人寫完過)
有些題目沒寫過就真的寫不出來，不過準備方面有個方向可以預測，就是老師喜歡出最難的，計算很麻煩的......(我覺得這是老師的樂趣之一，像我有一次問老師沒教過的範圍會考嗎？結果老師很自然爽朗的回答：會阿XD。由此可推斷老師的出題風格)
準備考試方面非常辛苦，記得第四次期中考那次聽到電資的同學彼此間的問候語：ㄟ 你昨晚有睡嗎?(大家都在趕題庫)不過當然，準備充足的話就可拿極高分(幾乎滿分)，而且最後還會調分，像有些人原始分數就90幾那一調還得了，推薦給努力向的人。

特色：
老師教學蠻熱情的，然後上課上一上就會丟問題說可以設計一個程式來解決這問題喔~，也會鼓勵同學參加程式設計培訓。上課時會學到很多東西，有時老師也會很自然地放出一些冷梗，氣氛蠻輕鬆的。計算方面如果有一堆符號看起來很亂也會舉個例子造著步驟推一遍，就比較容易懂，基本上如果有認真聽課準備考試時就不需要再看PPT了。不過有關資工的章節像演算法會直接跳過去個人覺得有點可惜",5,5,5,undefined
8,離散數學,易志偉,101-2,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

The Basics of Counting
The Pigeonhole Principle
Permutations and Combinations
Binomial Coefficients
Chapter 1 The Foundations: Logic and Proofs
Chapter 2 Basic Structures: Sets, Functions, Sequences, Sums, and Matrices
Chapter 4 Number Theory and Cryptography
Chapter 5 Induction and Recursion
6.5 Generalized Permutations and Combinations
6.6 Generating Permutations and Combinations
Chapter 8 Advanced Counting Techniques
Chapter 9 Relations
Chapter 10 Graphs


◆上課方式◆
（投影片、團體討論、老師教學風格）

老師上課是用投影片教課，上課其實蠻有趣的

不過有時候會在簡單的地方停留太久，會讓我有點小不耐煩 @@

個人是覺得他教的蠻好的耶，雖然有時候會掉漆 XDDD

就上課蠻有趣的這樣吧

不過助教有點雷（小聲


▼考試作業▼


四次作業，四次考試

考試題目會有很大的趴數從作業裏面出這樣

不過有點在意的就是一開始說好作業有教就有分，結果後來不是這樣XD

然後基本上建議除了投影片外還要看課本，課本有些地方寫的真的比較好

（雖然課本有時候有點囉唆）


￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

一開始老師會讓你選擇你的成績計算方式

1. 考試 100%
2. 考試 90% 出席率 10%
3. 考試 90% 作業 10%
4. 考試 80% 出席率 10% 作業 10%



￠最後想說的話￠


我覺得老師真的蠻有趣的WWW


＆誰適合修這門課＆

需要修離散或是對離散有興趣的人 XD",5,5,5,undefined
9,數位電路設計,莊仁輝,99-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

最開始教二進位換算 之後是and or not之類的運算（是叫邏輯代數?）

然後是K-Map 真值表 畫簡單的Gate圖 之後到各種coder 跟 mux

之後是flip flop 還有暫存器 最後是ROM RAM等

（我都直接看原文書 都不太確定中文是啥= =）


◆上課方式◆
（投影片、團體討論、老師教學風格）

教授是用投影片+寫黑板

前三章很簡單他卻教了好久...大概1/3學期吧

結果後面2/3學期感覺有點飆速...記得教授自己也很清楚教太快

還說我們先學可以教教別的教授班的...

教授常常會用很台灣口音的英文上課

然後用中文跟我們聊天= = （不果有些地方還是會用中文上課 看教授心情）

因為班上好像有不少外籍生...

另外教授人很好 幾乎都是笑臉 =)

我室友不懂常常舉手請教授再講一遍...教授都不厭其煩的重講

甚至我室友還是不懂 教授還是願意再講一遍@@

不過因為教授的飆速...後半學期我跟不太上 都是自己看課本了@@

不過感覺教授會出他自己上課多教的東西...因為我常常在考卷上看到我在課本沒看過的


▼考試作業▼


每週都有作業 總計12個 每次五題滿分100 作業都是課本後面的習題

最後取成績較好的十次 每次占學期平均1分

（我剛好因為宿營跟一次真的沒空寫缺繳...剛好缺繳兩次XD）

考試的話...總計兩次期中考 一次期末考

期末考占的稍微重一點 不過題型跟期中考一樣

每次期中/期末考前一周 會先有個小考

小考題目就是從上次期中考到那次小考這期間的作業

因為教授會把上課的講義跟每次作業答案放在他的官網

所以這三次小考都是送分的...我好像一次100兩次95

然後期中期末考的考型大概就是十題左右

有畫圖有畫真值表或是只求答案 不過期末考考了不少觀念回答題

基本上不難...因為數位電路算是我這學期最認真的課...

小考、小考完週末、期中考前都讀一次 每次都讀了三次課本去應考

感覺雖然題型很靈活，但是都不算難...我第一次跟期末考都80幾

但是第二次期中考因為當時一堆考試整晚沒睡...

考試時邊打瞌睡邊寫= = 竟然把encoder 跟 decoder寫顛倒

然後這兩題被扣了三十分= = 連另一題考剛開學教的邏輯代數我都分解錯誤 囧(10分吧)

結果原本70幾被扣到30... 最後整學期平均67 教授調分調到73...

超殘念的 虧我那麼認真每次考試都讀三遍以上= = 一個熬夜害死我

另外就是教授大考小考都是有A B兩種不同的卷 想要抄旁邊的不可能...

（回家作業就嘿嘿嘿了XD）

噢還有就是第二次期中考因為全班平均好像才四五十 教授還特別出了補考

題型跟期中考一模一樣 但是改了數字而已...

但是那時忙別科...只是又把課本讀一遍 結果不會的還是不會 囧

（最後就是有個一直問問題的外籍生平均超高的=口=）


￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

教授完全不點名...

不過如果像我室友那樣每堂都一直問問題...突然有天不去就被教授調侃了XD

需要的基礎我覺得應該要有 但是我也不清楚是要什麼

不過像我這樣多讀幾遍課本基本上還是可以考七八十的


￠最後想說的話￠


當初是因為同學很多都在暑假就把這課修完

所以想說這堂應該不需要啥基礎（我室友說很簡單） 所以就大一先修了

感覺還算不錯 我很有興趣 不過英文授課真的有點吃力（←學測英文被電）

然後就是後面真的超難...前三章花那麼多時間教真的有點不好...


＆誰適合修這門課＆

都可以吧",3,4,4,undefined
10,數位電路設計,范倫達,99-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

一開始教的內容還滿簡單的
基礎的編碼、2補數之類
但到後面會越來越難
要學會畫很多種電路圖



◆上課方式◆
（投影片、團體討論、老師教學風格）

使用投影片教學
另外舉例子會板書輔助

老師的講解滿平穩清楚的
教到重要的地方會特別提醒(例如考試時會怎麼出)
也會舉滿多例子 讓我們觀念更清楚
有時也會考前小複習一下
所以上課認真聽應該可以吸收了解滿多的
回去後複習也會比較方便



▼考試作業▼


三次考試：各25%
小考：18%
作業：7%

作業－－
每個章節都會從課本習題出3~5題
但這學期只有前幾次作業要交
之後都只是勾習題讓我們做

小考－－
要小考會事先講
題目基本上幾乎都是作業題(或延伸)
所以只要有做作業，小考應該都可以考得不錯

考試－－
會出部份的作業題(或者類似的延伸題)
有幾小題簡答，解釋專有名詞、比較不同
會出滿多畫圖題(ex:填table.畫circuit)
尤其是K-MAP很重要，會出一大題相關的



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

老師幾乎不點名
這學期應該只有點過兩次名

可是老師會記住認得一些同學
還會幫他們取綽號，非常可愛XD

這門課應該不需要什麼基礎，是個和樂融融的課



￠最後想說的話￠


老師是個很認真的人
上課的時候也很想和同學有良好的互動，期盼同學的反應
有時候沒人理他，就會感覺很落寞XD
但有得到回應他就會很開心的感覺XD
老師真的是個很好的人，很樂意幫忙解決同學的問題
希望大家都能多給他點回饋～
不得不提他教師網頁的相片集真是讓人回味無窮


＆誰適合修這門課＆

資工系的必修課

想平實又帶點歡樂學習數位電路設計的人",4,4,4,undefined
11,資料結構與物件導向程式設計,吳育松?,99-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

以下幾種資料結構

vector、linked list、stack、queue、tree、
heap、hash table、Splay tree、AVL tree、(紅黑樹)
Graph

並講述相關演算法 (tree traversal, dijkstra, ....)

另外還有其他主題：time complexity, 各種sort

在課程安排上，強調使用C++ STL (會實際去看STL的source code)


另外，課本是《Objects, Abstraction, Data Structures and Design Using C++》

，注意不是horowitz的聖經本不要買錯。不買教科書也不會特別妨礙學習，如果需要

裡面的code可以上教科書官網抓 (code投影片上會放但有點亂，不是很好讀)



◆上課方式◆
（投影片、團體討論、老師教學風格）

放投影片講課輔以板書，有時還能體驗用維基百科上課的新潮教學方式科科！

老師有時會以一種發現新大陸的眼神看著自己的投影片，

並沉吟許久之後和我們分享他發現的喜悅 ^.<

（有一節課老師和我們坦言他沒備課）



▼考試作業▼


五次作業：

1. vector：測STL vector和老師要求寫法的vetor的表現，交報告。

2. linked list：實做memory pool做記憶體管理。online judge。

3. queue：給兩種資料輸入頻率的機率分佈，建模之後(這部分老師有給code)

，做performace analysis，交報告。

4. stack：給infix expression，算出答案。online judge。

5. hash：給大量資料，做大量的insert/find/erase，online judge。


三次的online judge作業真是非常的刺激(抖)，規則如下述：把code上傳到老師

的伺服器之後，會自動送輸入，依照正確性和程式表現自動打分。程式表現的部

分有不少子項目，不過大體上就是用的指令數/記憶體大小。全班最後依照程式表

現搶分數，一樣正確的程式表現越好的得越高分，且每項作業的總分是固定的，所

以即使寫的完全正確，也不一定能拿滿分 ^.<*~。不過一切都非常透明化，你所有

項目的成績，valgrin給的分析報告，甚至連打分數的程式碼全部都open to you，

所以不至於有什麼不公平在這階段發生。


考試部分就是期中和期末考，一般的筆試，題型有是非選擇簡答證明寫code。這門課

蠻注重看別人source code的能力，所以期中期末都有相關題目，期中是PTT搜尋文章

代碼的函數，期末是std::sort的原始碼，要理解這些原始碼之後回答問題，不過看

懂之後其實蠻簡單的。



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

需要的基礎是C/C++，畢竟要寫程式嘛，其它應該都不需要。

另外就是這門課完全不點名出席率也不高。



￠最後想說的話￠


先說，老師人很好，有一次我半夜寫作業覺得online judge不知道為

什麼怪怪的，寫信問老師，他從凌晨一點到早上十點幫我重送了三次

，人真的很好(雖然最後是我自己的問題XD)！


但是老師或許是第一次教這門課，或是個性走天然呆路線，況且三十

好幾的中年男子走天然呆路線一點也不萌，所以講解並不是很清楚。

首先是老師有時會備課不足，所以整節課就浪費很多時間在讓他研究

投影片上寫啥。有時候老師的講解已經玄妙到進入讓人不禁懷疑他是

魔法少女嗎之類的地步，試舉一例：

（看向投影片上要講解的那行）

吳：「hmmmmm....hmmmmmmmmmmm.....oh....hmmmm...oh,yes.」

（傻笑，繼續講下一行）

你沒看錯，講解已經結束了 (doh)


但我不否認老師很認真在出作業和考卷，作業作的東西也蠻有意義的，

雖然程度和他的上課內容有點不成比例，而且會用到沒教過的東西例如

排隊理論，但對於增加coding能力算有幫助。


原始成績分布是很漂亮的鐘形曲線，平均落在61-70區間，最後調了10-

15分左右。



＆誰適合修這門課＆

挑戰自學能力的極限與潛能

ドＭ


同場加映：誰不適合修這門課

期待上課時間能弄懂大部分內容，達事半功倍之效的人（需要堅強的自修能力）

不喜歡寫程式的人（你會抓狂）

容易抓狂的人（你會抓狂）",3,3,3,undefined
12,資料結構與物件導向程式設計,荊宇泰,,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

Introduction
array
stack and queue
linked list
tree
binomial heap
hashing
priority queue
balance tree
optimal binary search tree
graph



◆上課方式◆
（投影片、團體討論、老師教學風格）

老師是用自己投影片教的 不過都只有文字

要搭配課本才會看得懂 老師也會在上課的時候畫圖講解



▼考試作業▼


期中期末兩次考試 考的都是老師上課的內容

有小考 不過好像沒幾次 考的也是上課內容

作業有四次 都是code



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

不點名

如果上課老師用英文講解的內容聽不懂

下課可以再找老師問一次 老師用中文講解超清楚



￠最後想說的話￠


老師用的英文不會太艱深

如果不要恍神的話 應該是可以聽懂的

老師會調分 好像原始成績4X的可以調到及格

然後我期中期末都考得太差 沒被調到及格 QQ

最後老師就讓我們這些期末成績不及格的人補考

補考內容就是一整個學期的課程

實際上考卷蠻多都是從期中期末考的考卷出的

我算是僥倖補考有過關 最後拿到60

不過認真一點的人 要拿9X還是有的

最後老師大概當掉十幾個人

雖然我曾經差一點被當掉 但我還是覺得老師人很nice^^



＆誰適合修這門課＆

聽英文不會聽到恍神或睡著的人",4,3,4,undefined
13,資料結構與物件導向程式設計,荊宇泰,102-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

課本：Fundamentals of Data Structures in C++, by Horowitz, Sahni, and Mehta.
Silicon Press.

上面是寫這本啦，不過我沒怎麼看書所以不確定。

內容就許多基本的資料結構：
array, stack, queue, linked list, tree, hash

priority queue(leftist tree, binomial heap), AVL tree, graph

有含一點點的演算法：sorting，spanning tree(kruskal's algorithm)


◆上課方式◆
（投影片、團體討論、老師教學風格）

首先最重要的英文的問題，老師的英文十分親切，道地的台灣腔(稱讚的意味)，

而且也不會用太艱深的字(除了必要的專有詞彙)，大部分都聽得懂。

有趣的是，老師有時候擔心大家聽不懂，會用中文覆述一遍XD

老師有做自己的投影片，沒有講到太細節的部分，可能要再搭配課本學習。


▼考試作業▼


小考10%、程式作業20%、三次段考20%/25%/25%

考試內容不會太難，有讀書就能拿到很高分。

作業就是實作一些資料結構，像是寫一個 binomial heap 之類作業。


￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

老師從來不點名，但考試應該還是都要到

只要會寫C就能來修這門課了~

分數頗鬆，我就拿到96分，教授表示：也有人破百的！

但是不調分，所以每一分都要靠自己拿。


＆誰適合修這門課＆

資工系大二上必修...",3,4,4,undefined
14,計算機組織,蔡淳仁,111-2,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
不同指令集架構，例如MIPS跟RISC-V，以MIPS為主（雖然老師說他其實比較想教RISC-V，但是其他老師不同意xdd）。會教組合語言，還有組合語言如何被CPU執行（single-cycle CPU和pipelined CPU），還有作業系統如何使用記憶體。

◆上課方式◆
（投影片、團體討論、老師教學風格）
用投影片上課，還有一小時是非同步的影片，找時間自己看。老師講話讓我有點想睡覺，不過有時候老師會問大家有沒有聽懂剛剛講的，沒有人回應的話就會用中文再講一次。另外老師也會講一些跟電腦發展有關的故事，相當有趣。

▼考試作業▼
考試：沒有小考，只有期中考跟期末考，以及一次上機考，考verilog寫CPU。期中考跟期末考都是筆試，可能有手寫組合語言的題目。
作業：有五個作業，全部串起來就是一個pipelined CPU，所以如果某一次作業沒有完成的話就會沒辦法寫下一個。不過助教也有考量這點，所以後面比較難的作業會公布解答，可以拿助教的code去用（例如我xd
然後要注意會有部分分數，例如我其實只寫了pipelined的一小部分，甚至沒有套在CPU上（也就是說寫的東西完全沒用），但助教還是給我七十幾分，所以最後的作業就算做不出來也是可以寫一些簡單的東西，也許就能多拿一些分數。

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
不看出席率，半學期過後教室大概剩三成的人，不過老師好像也不太在意。基礎的話可能需要會寫verilog，不然就要跟我一樣開學才找上網惡補...（電機系邏設沒教qq）

＆誰適合修這門課＆
所有想走數位IC或想了解電腦架構的人

￠最後想說的話￠
修這門課雖然有點難度，畢竟資工的計組很重視verilog的實作，但是寫出一個CPU來跑真的蠻好玩的，分數的話不算很甜，推薦給想學東西又不是很在意分數的人。",4,4,4,undefined
15,計算機組織,李毅郎,99-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

用書為計組聖經本(算盤本)：

David A. Patterson and John L. Hennessy,
Computer Organization & Design-- The Hardware/Software Interface,
4th edition, 2009, MORGAN KAUFMAN.

的1~6章

MIPS語言(類似組合語言的低階語言)

Arithmetic(電腦的算術)

The Processor(處理器)、pipeline(管線化)

Memory Hierarchy(記憶體階層)、cache(快取)

Storage and I/O


◆上課方式◆
（投影片、團體討論、老師教學風格）

投影片上課，每堂課都會錄影。

老師講話的速度慢慢的（溫文儒雅的感覺），用"有邏輯"的說法跟我們介紹計算機組織

有邏輯是指他不會一味的照投影片教，而是有自己邏輯，再跟投影片內容呼應。

如果都跟上他講話的內容，基本上不會遇到問題。

教了一個段落後，有時會告訴我們這裡很重要，大家有沒有問題。如果有人發問，老師

總是會聽懂同學的問題（聽不懂的話會再跟同學確認一次），再詳細的講解一遍。


雖然課本是聖經本，但老師常跟我們說：同學不用把這本書當成bible，他也可能

寫不好。電腦架構他這樣設計有優缺點，如果你有更好的設計，只要講得有道理，

就不要完全信服課本。



▼考試作業▼


三次大考65%，七次小考15%，６次作業20%。

大考試似乎是70%是聯合命題，30%老師自己出。老師自己出的部分常會考小考的東西，

或他上課強調的，不會很刁鑽。

小考的目的是要讓我們跟上進度念書，常常有很多是非題，或申論題(解釋這些名詞)，

或計算題。都是課本上的東西啦，如果課本讀得懂，就ok了。


計組的作業都是用Verilog來做個簡單的CPU
作業一是自己設計一個CPU，能讀Load跟Store指令。
作業二是自己設計一個CPU，能做ALU(算術邏輯單元)運算。
作業三是自己設計一個CPU，根據指令來控制其他元件(decoder)。
作業四是把前三個作業整合，成為一個小型CPU。
作業五是把作業四的CPU改良成能pipeline(管線化)處理指令運算。
作業六是寫個程式模擬cache(快取)，用C/C++。



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

不點名。小考前會先講，讓同學準備。

寫作業都是用verilog來寫程式，但是這門課從頭到尾都沒有教我們verilog。

這門是資工系三上必修，大家的基礎都是在大二下數位電路實驗學的verilog。

所以第一個作業研究的有點辛苦（以前基礎不好QQ）


￠最後想說的話￠


老師不只在課堂上樂於解答學生問題，下課時同學去問他問題，他也不厭其煩的再講解

一次。私下跟老師約時間問問題，老師也很有耐心再教導，不管我問的問題多笨。


＆誰適合修這門課＆

計算機組織這門課，修到後來發現就是在講『電腦如何運作』的課，CPU怎麼設計？

記憶體怎麼設計？為什麼要這樣設計？快與省空間如何取捨(trade off)？

除了資工系必修外，有興趣的人可以來聽聽看:)
",4,4,4,undefined
16,計算機組織,吳凱強?,,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

Chapter 1 - Computer Abstrations and Technology

Chapter 2 - Instructions Language of the Computer

Chapter 3 - Arithmetic for Computers

Chapter 4 - The Processor

Chapter 5 - Large and Fast Exploiting Memory Hierarchy

Chapter 6 - Storage and Other I/O Topics

Chapter 7 - Multicores Multiprocessors, and Clusters


◆上課方式◆
（投影片、團體討論、老師教學風格）

看著投影片講故事


▼考試作業▼


三次隨堂小考 (9%) + 五次Project (26%) + 三次考試 (70%) = 105%

小考都是考當次上課的東西

Project都是寫Verilog + 第五次要寫C++

第一次考試範圍是 Ch.1 ~ Ch.3

第二次考試範圍是 Ch.3 ~ Ch.4

第三次考試範圍是 Ch.4 ~ Ch.6

Ch.7 沒烤就焦了


￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

老師不點名

都是靠小考跟領考卷來看出席

不過這是少數幾堂過期中之後

課堂還是滿著的課

學期末會依出席次數給予加分

bonus_score = (attendence==5)? 3:
(attendence==4)? 2:
(attendence==3)? 1:0;

這堂課當初是跟DLAB一起修的

所以還滿怕會跟不上的

畢竟從來沒寫過硬體語言

不過後來Project有隊友CARRY所以就沒事了ˊˇˋ

Verilog真的要學其實不難

再加上計組的Project說穿了就是看圖接線

最難的地方應該是學習用ModelSim吧

唯一需要的基礎就是電路邏輯吧(數電)吧

可是老師又會重新補充一下

所以我覺得and or not xor nor 懂就可以來了


￠最後想說的話￠


老師是第一年教課

他明年也要開計組

可是是英文授課

所以趕快上來幫他補個血XD

(聽說數字會說話)

最後原始成績54.5以上都有過

原本就過的人中均是 79.6

期末平均是56，佔25%

印象中其他兩次平均都是及格以上

min(exam1,exam2) = 20%;

max(exam1,exam2) = 25%;

老師會親自改考卷

所以成績大概都過一兩天就出來了=口=

(話說為了方便兩次考試是非題答案

第一次全部都一樣

第二次全部為alternating)

印象最深刻就是期末開放給大家自己出題

以及我在考試卷上某題答案畫了恐龍

然後老師很霸氣的寫了個NICE!

結果還是零分QAQ

喔對了，然後最後一堂課的時候全班掌聲拍手謝謝老師

我覺得老師真的不只很懂他的領域

也很了解學生需要怎麼學習

像是很難的地方老師會重複很多次

每次上課都會先稍微複習一點上次的東西

上一上也會突然停下來讓大家消化一下

如果覺得學生已經放空就會放慢速度

重點是覺得沒辦法教完就會提早下課

而不是硬教搞到學生下次也是忘記了

結論就是不涼，學很多，大推


＆誰適合修這門課＆

沒考古題也可以泰然自若的人

能忍受別人一直"恩亨"的人",4,4,4,undefined
17,人工智慧概論,胡毓志,111-2,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
人工智慧的base
search
演算法BFS DFS A*等等
min-max
learning的一堆內容
logic

◆上課方式◆
（投影片、團體討論、老師教學風格）
實體上課
投影片只會活一週就會拿掉
英文算很好
講的也滿清楚
但內容多到三小時保持專心很辛苦
建議先預習在上課

▼考試作業▼
考試這學期期中期末考超難的，好像是有同學拿考古題去問老師
老師就決定都不出考古題了
所以出的很認真（很難）
希望那位同學都會寫==
考試平均還是中位數都落在30~40的樣子
有個project 看起來很難，我還沒寫

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
幫老師宣傳，老師說，想修酷炫的ML and DL請修其他課
他這邊是AI的根基，不會講DL那些炫砲的技術
不要修了又嘴他講得太簡單或太淺
因為這就是打基礎的課程
（雖然考試超難，唉）
也不點名啦
但大家出席率滿高的

￠最後想說的話￠
老師好像很在意學生的評價
第一堂課講超久學生之前對他的不滿
什麼英文口音 內容很基礎之類的
然後一直勸退要人不要選
感覺看學生評論看到有點走心了
有點可愛",3,3,3,undefined
18,影像處理概論,莊仁輝?,99-2,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

課程網站

http://islab6.cs.nctu.edu.tw/?page_id=399


使用的課本是

Digital Image Processing, 3rd Edition by R.C. Gonzalez and R.E. Woods

上課的內容主要有

Ch 2. Digital Image Fundamentals　

灰階的概念以及一些需要的數學


Ch 3. Intensity Transformations and Spatial Filtering　

藉由修改像素的灰階強度來處理影像

修改像素灰階的方法有強度的轉換或者是藉由mask參考鄰近的像素來決定


Ch 4. Filtering in the Frequency Domain　

介紹一維與二維的Fourier transform, sampling

lowpass filter, highpass filter, bandpass filter

稍微提到FFT的算法


CH 5. Image Restoration and Reconstruction　

利用退化現象的先驗知識進行影像的修復

以便恢復原始的影像


Ch 6. Color Image Processing　

介紹pseudo color以及RGB, CMY, HSI等顏色模型


Ch 8. Image Compression

一些壓縮方法(如Hoffman code)和redundancy

information theory 的 entropy也有稍微提到


Ch 7. Wavelets and Multiresolution Processing　

老師預計想上的部分 不過因為時間太趕

所以期末考後還特別花一節課講一些相關的性質



◆上課方式◆
（投影片、團體討論、老師教學風格）

幾乎都用投影片 偶而搭配一些板書

有問題隨時可以舉手提問



▼考試作業▼


每週有手寫作業 出自課本習題跟老師的想法

這學期共有兩次小考 都完全出自作業題

兩次大考(原本預計三次)

作業跟小考 20%

兩次大考 45% + 35% = 80% (擇優算45%)



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

建議先修過訊號與系統

有一點convolution 和 Fourier transform 的概念會比較輕鬆

delta函數也很常用



￠最後想說的話￠


老師人不錯 上課不遲到 很認真

只要提問 他都會盡力講解到讓你懂

交作業跟小考前也會先講解



＆誰適合修這門課＆

所有需要這門課的人",4,3,4,undefined
19,正規語言概論,楊武,99-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

1. Introduction to The Theory of Computation
這裡老師有簡單複習一下離散的東西，像是countable和set之類的

2. Finite Automata
3. Regular Languages and Regular Grammars
language基本上就是個set，所以set要看一下

4. Properties of Regular Languages
5. Context-Free Languages
6. Simplification of Context-Free Grammars
7. Pushdown Automata
8. Properties of Context-Free Languages
9. Turing Machines
10. Other Models of Turing Machines
11. A Hierarchy of Formal Languages and Automata
12. Limits of Algorithmic Computation
利用redunction來導出某些問題無解的一章！
有修過演算法可能會輕鬆一點，不過沒有修過也沒差很多啦

13. Other Models of Computation
14. An Introduction to Computational Complexity

看title差不多就知道幾乎都在上各種autumata和對應的language
後面會延伸到一點點NP和NP-C問題與其對應的Turing Machine
不過沒有特別深入就是

整本書都會上完喔^__<~*





◆上課方式◆
（投影片、團體討論、老師教學風格）

基本上就講教授自己做的ppt

上課的話老師會先講machine，講完machine之後講對應的language

等到整個相對的machine和language講完以後再跳到下一個machine


當然，伴隨著新的machine出現的會是(許多的)定義，定理，lemma，還有證明

以及無窮無盡的作業www


噢，有個小小的重點

就是老師講話相當的嗚嚕嚕

就算拿了麥克風回音/泛音(?)還是有點大，這算是個人特色吧?

一開始不習慣會聽不懂他在說什麼，並且附帶催眠效果






▼考試作業▼



期中期末各40%，作業15%，上課表現5%

(幾乎)每次上課都會出作業，繳交時間是下個禮拜同一時間

作業大部分都是課本後面習題

有時候會從他的ppt裡出


期中期末的話題型一樣

總共十題，每題十分~


期中考的話

包含了CYK Parsing啦，要你畫一個DFA出來啦，

證明兩個CFL的交集/聯集是否還會是CFL之類的等等


期末則有寫出指定的TM，欸其他的有點忘了

基本上就是一堆證明題


教授如果看到你交考卷的時候上面有一堆空白會叫你回去把空白部分填完才可以交

他人很nice吧



￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

set蠻重要的

不過老師上課會複習~~ 雖然只有快速掃過而已

因為幾乎每節課都要交作業所以想翹課的話至少要托個人幫忙交作業~



￠最後想說的話￠



其實教授還蠻耐斯的啦


他講課邏輯清楚，只是嗚嚕嚕了點相當可惜

雖然每次都要交作業不過也只會勾一兩題



成績感覺有瘋狂調分過，雖然我不知道期末考了幾分



＆誰適合修這門課＆

想要理解計算機的計算能力極限的人！",4,4,4,undefined
20,正規語言概論,楊武,100-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

用的教科書是
Peter Linz, An Introduction to Formal Languages and Automata

而不是其他老師通常用的
M. Sipser, Introduction to the Theory of Computation

總共14章節 比其他老師用的書共7章節整整兩倍

因此講的內容會比較細比較多

1. Introduction to The Theory of Computation
2. Finite Automata
3. Regular Languages and Regular Grammars
4. Properties of Regular Languages
5. Context-Free Languages
6. Simplification of Context-Free Grammars
7. Pushdown Automata
8. Properties of Context-Free Languages
9. Turing Machines
10. Other Models of Turing Machines
11. A Hierarchy of Formal Languages and Automata
12. Limits of Algorithmic Computation
13. Other Models of Computation
14. An Introduction to Computational Complexity

這學期只教到13章 但以往都全教完

machine->Languages->Grammars->比較這個Language與之前的Languages 迴圈
中間夾查一堆證明範例圖示作業
後面再用簡單問題reduce到比較難的問題的一堆證明

由此可知後面需要前面的基礎 定理觀念證明一堆
建議想翹課不要挑這門翹



◆上課方式◆
（投影片、團體討論、老師教學風格）

講義是教授從課本節錄下來再修改過的 不算ppt 可當一本書看了

印下來整整兩本 我覺得讀講義就夠飽了= =

講義寫蠻清楚了

可以配著某校中文ppt看 完全照著楊武的講義走

www.csie.dyu.edu.tw/~spring/Teaching/97_2/Formal/chapter03.pdf

改後面chapter03就可以換章節


老師邏輯相當清楚 每次上課會小複習上次教的 如果沒有發生意外的話 可以聽得很懂

所謂的意外就是:

1.老師麥克風壞了，一直聽到爆炸的聲音，但需要同學提醒一下，不然老師永遠感覺不到

2.老師原本就有烏嚕嚕的特色 如果當天你耳朵耳屎太多也會聽不到

3.老師聲音有時會突然變點小 所以睡覺不用擔心被吵醒


老師有時會隨機點人問問題

答對會送你一瓶果菜汁


可能他以前都被同學欺負 很愛酸一下同學 和講個只有他自己會笑的笑話


▼考試作業▼



期中期末各40%，作業15%，上課表現5%(這學期好像沒有)

作業平均一個禮拜一次 有時候還一個禮拜兩次...

一次大概都勾個2題到6題

作業拿來當自我練習用 不會對期中考期末考肖想會有類似的題型



期中期末都不會出考古題 只遇到一題 但有寫還是有幫助

都是新鮮的題目又很複雜

期中只是畫個dfa的題目也可以出道 解答老師畫滿整個黑板密密麻麻的圖

grammar都出很難寫出來的那種 又愛連鎖題

這些就要保佑當時能不能賽道一下不然就要保佑助教人很好會部分給

證明的話觀念要好 會出課本沒講過的證明 只看課本的話要把觀念弄懂大概ok


助教人很nice改很鬆 題目不好寫但期中大家平均還是能到50 好像還有人100分@@

有寫就有機會有分 盡量別空白 不會寫就發揮道理王或唬爛的精神




￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

不點名 但要記得交作業



￠最後想說的話￠


跟著教授一步一步來可以體會到正規語言的有趣

會調分但不怎甜 總平均8X


＆誰適合修這門課＆

這必修 不想修也得修這個天書
--
",4,3.5,4,undefined
21,正規語言概論,黃俊龍,102-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）

Introduction (Types of proof)
Finite Automata, Regular Expressions, and Regular Languages　
Pushdown Automata, Context-Free Grammars, and Context-Free Languages
Parsing　
Turing Machines, Decidability, and Reducibility　
Time Complexity, P, NP, and NP-Completeness　


◆上課方式◆
（投影片、團體討論、老師教學風格）

小小黃是用投影片上課，不過到期末的時候有寫點黑板XD
我滿喜歡他上課的感覺，例子舉得很不錯而且很有趣
不過大概是因為怕大家聽不懂，所以每堂課幾乎都會先複習再繼續講新進度
上課很幽默這樣

據說之前沒有講 Parsing，然後小小黃這次有講
（所以我們就沒有考據說根本玄學的 PCP 了 XD）


▼考試作業▼


兩次期中考，一次期末考
據說之前有作業，不過後來因為覺得很多人的作業都一樣(?)
所以我們這次沒有作業
就三次考試加起來除以三就是你的成績 :p


￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）

不點名，不過人很少的時候會很感慨(?)
需要的基礎好像沒有 @@?
(個人提早修無壓力XD)
只要會證明，然後上課好好聽就 OK 了
有些東西多思考就能理解

給分的話，我原始總成績 90 左右
應該是會調分，最後的成績還沒出來，出來後我再補推XD


￠最後想說的話￠


小小黃人很 NICE 的 >"<


＆誰適合修這門課＆

資工必修，然後有興趣的人",4,4,4,undefined
22,作業系統,吳俊峯,111-1,"￡教了什麼￡
（課程大概內容。或是額外學會了什麼東西。）
硬體內容
memory
CPU
kernel
HDD/SSD
架虛擬機

◆上課方式◆
（投影片、團體討論、老師教學風格）
舉手問問題加學期分數2分，上限10分
請一定要拿到
問什麼都可以算
現場跟直播都有
老師講PPT
老師很認真也很強
好像在哈佛過
同學們有一些感覺是硬體大神，但他們問的艱深問題老師都會（交大教授不好混啊...）
老師很年輕

▼考試作業▼
自己找paper 20 mins present老師自己跟3個同學約時間線上聽你報
會問問題，但整體算溫和，壓力不會太大
3個作業
第一個作業不難，好像是kernel，難在很多人的電腦很難build出一個符合他要求的虛擬機，尤其是mac的同學，節哀
第二個好像是C語言去幹嘛 還行
第三個直接難到放棄
但程式寫不出來也可以靠報告回答問題拿一點分，算仁慈
期中考很簡單，PPT背好大家都快100,滿分好像破百
期末考有點難，滿分100

￥其他￥
（是否注重出席率or嚴禁遲到？需要的基礎？）
硬體熱愛者去吧
然後作業你都寫得出來的話分數算甜

￠最後想說的話￠
老師人不錯啦，內容也滿扎實的
交大資工硬體好課
期中考考古題：",4,3.5,4,109550200
23,基礎程式設計,洪瑞鴻;林政寬;吳凱強,102上,"This course requires us to pass an exam called GPE and it needs lots of practice for people who are not very familiar with coding. Since it is a compulsory courses for Computer Science student, we have to pass it either way before graduating.

",4.1,2.1,4.1,109550200
24,MATLAB 程式語言,王才沛,102上,"test",4.5,undefined,undefined,109550200
25,微積分甲(一),余啟哲,102上,"很好",4.0,4.2,4.2,109550200
26,物理(二),籔下篤史,108下,"英文好像有點怪",4.8,4.8,4.8,109550200
27,密碼學概論,曾文貴,111下,"考試有點難",4.5,4.5,4.5,undefined
28,通訊原理與無線網路,林靖茹,109上,"作業有點多",4.5,4.3,4.3,undefined